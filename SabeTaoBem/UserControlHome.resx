<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>